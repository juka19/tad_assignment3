# Calculate keyness and determine Republican as target group
result_keyness <- textstat_keyness(party_dfm, target = "Republican")
# Plot estimated word keyness
textplot_keyness(result_keyness)
tfreq_115 <- dfmat_115 %>%
textstat_frequency() %>%
head(20)
tfreq_115$feature <- factor(tfreq_115$feature, levels=tfreq_115$feature)
ggplot(tfreq_115, aes(x=frequency, y=feature)) +
geom_col() + labs(title="Feature (word) frequency for 115 session (2017 - 2018)",
x ="Frequency", y = "Feature") +
theme_minimal()
tfreq_116 <- dfmat_116 %>%
textstat_frequency() %>%
head(20)
tfreq_116$feature <- factor(tfreq_116$feature, levels=tfreq_116$feature)
ggplot(tfreq_116, aes(x=frequency, y=feature)) +
geom_col() + labs(title="Feature (word) frequency for 116 session (2019 - 2020)",
x ="Frequency", y = "Feature") +
theme_minimal()
tfreq_117 <- dfmat_117 %>%
textstat_frequency() %>%
head(20)
tfreq_117$feature <- factor(tfreq_117$feature, levels=tfreq_117$feature)
ggplot(tfreq_117, aes(x=frequency, y=feature)) +
geom_col() + labs(title="Feature (word) frequency for 117 session (2021 - 2022)",
x ="Frequency", y = "Feature") +
theme_minimal()
df <- df %>%
mutate(session_written = ifelse(session == 115, "session_115",
ifelse(session == 116, "session_116",
ifelse(session == 117, "session_117", NA))))
ytfreq <- dfmat %>%
textstat_frequency(groups = df$session_written) %>%
pivot_wider(id_cols=feature, names_from=group, values_from=frequency)
ytfreq <- dfmat %>%
textstat_frequency(groups = df$session_written) %>%
pivot_wider(id_cols=feature, names_from=group, values_from=frequency)
labels <- ytfreq %>%
rowwise() %>%
mutate(max_value = max(session_116, session_115)) %>%
filter((abs(change_115_116)>0.4 & max_value>2.5) )
ytfreq$change_115_116 <- log(ytfreq$session_116 / ytfreq$session_115)
max_change <- max(abs(ytfreq$change_115_116), na.rm=TRUE)
#Plot 3: labeling words with biggest change
labels <- ytfreq %>%
rowwise() %>%
mutate(max_value = max(session_116, session_115)) %>%
filter((abs(change_115_116)>0.4 & max_value>2.5) )
ggplot(ytfreq, aes(x=session_116, y=session_115, fill=change_115_116)) +
geom_point(color="grey", shape=21) +
scale_fill_gradientn(
colors = c("#4575b4","white","#d73027"),
values = scales::rescale(c(max_change*-1,0,max_change)), limits = c(max_change*-1,max_change)) + theme_bw() +
geom_label_repel(data=labels, aes(label=feature), min.segment.length = 0)
ytfreq$change_116_117 <- log(ytfreq$session_117 / ytfreq$session_116)
max_change <- max(abs(ytfreq$change_116_117), na.rm=TRUE)
labels <- ytfreq %>%
rowwise() %>%
mutate(max_value = max(session_117, session_116)) %>%
filter((abs(change_116_117)>0.4 & max_value>2.5) )
ggplot(ytfreq, aes(x=session_117, y=session_116, fill=change_116_117)) +
geom_point(color="grey", shape=21) +
scale_fill_gradientn(
colors = c("#4575b4","white","#d73027"),
values = scales::rescale(c(max_change*-1,0,max_change)), limits = c(max_change*-1,max_change)) + theme_bw() +
geom_label_repel(data=labels, aes(label=feature), min.segment.length = 0)
sims <- textstat_simil(dfm_corp, method="cosine")
sims <- textstat_simil(dfmat, method="cosine")
sim_df <- as.data.frame(sims, upper = TRUE)
sim_df
embeddings <- umap(as.matrix(dfmat))
df$x <- embeddings[,1]
df$y <- embeddings[,2]
colordict <- c( "Dem"="blue","Rep"="red", "Neutral"="yellow")
p <- ggplot(df, aes(x, y, fill=partisan)) +
geom_point(color="grey", shape=21, size=0.5) +
scale_fill_manual(values=colordict) +
theme_bw() +
coord_fixed()
p
p <- ggplot(df, aes(x, y, fill=party)) +
geom_point(color="grey", shape=21, size=0.5) +
scale_fill_manual(values=colordict) +
theme_bw() +
coord_fixed()
p
p <- ggplot(df, aes(x, y, fill=party)) +
geom_point(color="grey", shape=21, size=0.5) +
scale_fill_manual(values=colordict) +
theme_bw()
p
corp2 <- corpus(df$summary)
dfmat2 <- corp2 %>%
tokens(remove_punct = TRUE) %>%
tokens_remove(patter = stopwords("en")) %>%
dfm() %>%
dfm_trim(min_termfreq = 5)
embeddings <- umap(as.matrix(dfmat2))
df$x <- embeddings[,1]
df$y <- embeddings[,2]
colordict <- c( "Dem"="blue","Rep"="red", "Neutral"="yellow")
colordict <- c( "Democrat"="blue","Republican"="red", "Both"="yellow")
p <- ggplot(df, aes(x, y, fill=party)) +
geom_point(color="grey", shape=21, size=0.5) +
scale_fill_manual(values=colordict) +
theme_bw()
p
ggplot(df, aes(x, y, fill=party)) +
geom_point(color="grey", shape=21, size=0.5) +
scale_fill_manual(values=colordict) +
theme_bw()
lda_115 <- LDA(dfmat_115, 5)
topic_words_115 <- tidy(lda_115, matrix="beta") %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta)
topic_words_115
topic_words_115 %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") + scale_y_reordered() + theme_minimal()
lda_116 <- LDA(dfmat_116, 5)
topic_words_116 <- tidy(lda_116, matrix="beta") %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta)
topic_words_116
topic_words_116 %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") + scale_y_reordered() + theme_minimal()
raw.sum = apply(dfmat_117,1,FUN=sum) #Removing non-0 rows from dfmat
dfmat_117 = dfmat_117[raw.sum != 0, ]
lda_117 <- LDA(dfmat_117, 5)
topic_words_117 <- tidy(lda_117, matrix="beta") %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta)
topic_words_117
topic_words_117 %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") + scale_y_reordered() + theme_minimal()
summary_sentiment <- read_csv("https://raw.githubusercontent.com/juka19/tad_assignment3/main/data/data_w_vader.csv")
wide_sentiment <- summary_sentiment %>%
group_by(party, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party, values_from = score) %>%
select(-c("Both", "NA"))
summary_sentiment <- summary_sentiment %>%
summary_sentiment$party <- ifelse(summary_sentiment$cosponsor_D_perc > 0.66, "Democrat", ifelse(summary_sentiment$cosponsor_R_perc > 0.66, "Republican", "Both"))
summary_sentiment$party <- ifelse(summary_sentiment$cosponsor_D_perc > 0.66, "Democrat", ifelse(summary_sentiment$cosponsor_R_perc > 0.66, "Republican", "Both"))
wide_sentiment <- summary_sentiment %>%
group_by(party, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party, values_from = score) %>%
select(-c("Both", "NA"))
days <- data.frame(date = seq(as.Date("2017-01-01"),as.Date("2022-12-31"),1))
daily_sentiment <- days %>%
left_join(wide_sentiment) %>%
pivot_longer(cols = -date, names_to="partisan", values_to="score") %>%
group_by(partisan) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment %>% head()
ggplot(daily_sentiment, aes(x=date, y = score, colour=partisan)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) + theme_minimal() + geom_smooth(method = "lm")
daily_sentiment <- days %>%
left_join(wide_sentiment) %>%
pivot_longer(cols = -date, names_to="party", values_to="score") %>%
group_by(party) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment %>% head()
ggplot(daily_sentiment, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) + theme_minimal() + geom_smooth(method = "lm")
summary_sentiment$party_full <- ifelse(summary_sentiment$cosponsor_D_perc == 1.0, "Dem", ifelse(summary_sentiment$cosponsor_R_perc > 1.0, "Rep", "NA"))
wide_sentiment_full <- summary_sentiment %>%
group_by(party_full, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party_full, values_from = score) %>%
select(-c("NA"))
View(wide_sentiment)
wide_sentiment_full <- summary_sentiment %>%
group_by(party_full, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party_full, values_from = score)
wide_sentiment_full <- summary_sentiment %>%
group_by(party, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party_full, values_from = score)
wide_sentiment_full <- summary_sentiment %>%
group_by(party, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party, values_from = score)
View(wide_sentiment_full)
wide_sentiment_full <- summary_sentiment %>%
group_by(party, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party, values_from = score) %>%
select(-c("Both", "NA"))
wide_sentiment_full <- summary_sentiment %>%
group_by(party, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party, values_from = score) %>%
select(-c("Both", "NA")) %>%
drop_na(Democrat, Republican)
daily_sentiment <- days %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party", values_to="score") %>%
group_by(party) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment %>% head()
ggplot(daily_sentiment, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
days_115 <- data.frame(date = seq(as.Date("2017-01-01"),as.Date("2018-12-31"),1))
daily_sentiment <- days_115 %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party", values_to="score") %>%
group_by(party) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment %>% head()
ggplot(daily_sentiment, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
View(wide_sentiment_full)
days_116 <- data.frame(date = seq(as.Date("2019-01-01"),as.Date("2020-12-31"),1))
daily_sentiment_116 <- days_116 %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party", values_to="score") %>%
group_by(party) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment_116 %>% head()
ggplot(daily_sentiment_116, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
days_117 <- data.frame(date = seq(as.Date("2021-01-01"),as.Date("2022-12-31"),1))
daily_sentiment_117 <- days_117 %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party", values_to="score") %>%
group_by(party) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment_117 %>% head()
ggplot(daily_sentiment_117, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
View(summary_sentiment)
df1 <- df[sample(nrow(df)),]
View(df1)
df1$env <- 0
df1$env[df1$cmp_code==501] <- 1
View(df1)
df1$env[df1$party == "Republican"] <- 1
df1$env <- factor(df$env)
df1$party <- 0
df1 <- df[sample(nrow(df)),]
df1$env <- 0
df1$env[df1$party == "Republican"] <- 1
View(df1)
df1$env <- factor(df$env)
df1$env <- factor(df1$env)
View(df1)
df_split <- initial_split(df, prop=0.8)
library(tidymodels)
library(textrecipes)
df_split <- initial_split(df, prop=0.8)
train_data <- training(df_split)
test_data <- testing(df_split)
rec <- recipe(env ~ text, data = train_data) %>%
step_tokenize(text) %>%
step_tokenfilter(text, max_tokens = 1e3) %>%
step_tfidf(text)
df_split <- initial_split(df1, prop=0.8)
train_data <- training(df1_split)
train_data <- training(df_split)
test_data <- testing(df_split)
rec <- recipe(env ~ text, data = train_data) %>%
step_tokenize(text) %>%
step_tokenfilter(text, max_tokens = 1e3) %>%
step_tfidf(text)
rec <- recipe(env ~ summary, data = train_data) %>%
step_tokenize(summary) %>%
step_tokenfilter(summary, max_tokens = 1e3) %>%
step_tfidf(summary)
model <- svm_linear(mode="classification")
wf <- workflow() %>%
add_recipe(rec) %>%
add_model(model)
model_fit <- wf %>%
fit(train_data)
scorer <- metric_set( yardstick::accuracy,
yardstick::precision,
yardstick::recall,
yardstick::f_meas
)
scorer(test_data, truth=env, estimate=prediction, event_level="second")
scorer <- metric_set( yardstick::accuracy,
yardstick::precision,
yardstick::recall,
yardstick::f_meas
)
scorer(test_data, truth=env, estimate=prediction, event_level="second")
test_data$prediction <- predict(model_fit, test_data)$.pred_class
scorer <- metric_set( yardstick::accuracy,
yardstick::precision,
yardstick::recall,
yardstick::f_meas
)
scorer(test_data, truth=env, estimate=prediction, event_level="second")
df1 <- df %>%
filter(party != "Both")
df1 <- df1[sample(nrow(df1)),]
df1$env <- 0
df1$env[df1$party == "Republican"] <- 1
df1$env <- factor(df1$env)
df_split <- initial_split(df1, prop=0.8)
train_data <- training(df_split)
test_data <- testing(df_split)
rec <- recipe(env ~ summary, data = train_data) %>%
step_tokenize(summary) %>%
step_tokenfilter(summary, max_tokens = 1e3) %>%
step_tfidf(summary)
model <- svm_linear(mode="classification")
wf <- workflow() %>%
add_recipe(rec) %>%
add_model(model)
model_fit <- wf %>%
fit(train_data)
test_data$prediction <- predict(model_fit, test_data)$.pred_class
scorer <- metric_set( yardstick::accuracy,
yardstick::precision,
yardstick::recall,
yardstick::f_meas
)
scorer(test_data, truth=env, estimate=prediction, event_level="second")
View(df)
df2 <- df[sample(nrow(df)),]
df2$env <- 0
df2$env[df2$policy_area == "Health"] <- 1
df2$env <- factor(df2$env)
df_split <- initial_split(df2, prop=0.8)
train_data <- training(df_split)
test_data <- testing(df_split)
rec <- recipe(env ~ summary, data = train_data) %>%
step_tokenize(summary) %>%
step_tokenfilter(summary, max_tokens = 1e3) %>%
step_tfidf(summary)
model <- svm_linear(mode="classification")
wf <- workflow() %>%
add_recipe(rec) %>%
add_model(model)
model_fit <- wf %>%
fit(train_data)
test_data$prediction <- predict(model_fit, test_data)$.pred_class
scorer <- metric_set( yardstick::accuracy,
yardstick::precision,
yardstick::recall,
yardstick::f_meas
)
scorer(test_data, truth=env, estimate=prediction, event_level="second")
View(df2)
summary_sentiment <- read_csv("https://raw.githubusercontent.com/juka19/tad_assignment3/main/data/data_w_vader.csv")
summary_sentiment$party <- ifelse(summary_sentiment$cosponsor_D_perc > 0.66, "Democrat", ifelse(summary_sentiment$cosponsor_R_perc > 0.66, "Republican", "Both"))
wide_sentiment <- summary_sentiment %>%
group_by(party, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party, values_from = score) %>%
select(-c("Both", "NA"))
days <- data.frame(date = seq(as.Date("2017-01-01"),as.Date("2022-12-31"),1))
daily_sentiment <- days %>%
left_join(wide_sentiment) %>%
pivot_longer(cols = -date, names_to="party", values_to="score") %>%
group_by(party) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment %>% head()
ggplot(daily_sentiment, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
colordict <- c( "Democrat"="blue","Republican"="red")
ggplot(daily_sentiment, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
scale_fill_manual(values=colordict) +
theme_minimal() +
geom_smooth(method = "lm")
ggplot(daily_sentiment, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7), values = colordict) +
scale_fill_manual(values=colordict) +
theme_minimal() +
geom_smooth(method = "lm")
ggplot(daily_sentiment, aes(x=date, y = score, colour=party)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
summary_sentiment$party_full <- ifelse(summary_sentiment$cosponsor_D_perc == 1.0, "Dem", ifelse(summary_sentiment$cosponsor_R_perc > 1.0, "Rep", "NA"))
wide_sentiment_full <- summary_sentiment %>%
group_by(party_full, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party_full, values_from = score)
View(wide_sentiment)
View(summary_sentiment)
wide_sentiment_full <- summary_sentiment %>%
drop_na(party_full)
View(wide_sentiment_full)
View(wide_sentiment)
summary_sentiment$party_full <- ifelse(summary_sentiment$cosponsor_D_perc == 1.0, "Dem", ifelse(summary_sentiment$cosponsor_R_perc > 1.0, "Rep", NA))
wide_sentiment_full <- summary_sentiment %>%
drop_na(party_full)
View(wide_sentiment_full)
summary_sentiment$party_full <- ifelse(summary_sentiment$cosponsor_D_perc == 1.0, "Dem", ifelse(summary_sentiment$cosponsor_R_perc == 1.0, "Rep", NA))
wide_sentiment_full <- summary_sentiment %>%
drop_na(party_full)
View(wide_sentiment_full)
wide_sentiment_full <- summary_sentiment %>%
drop_na(party_full) %>%
group_by(party_full, date) %>%
summarise(score = mean(compound)) %>%
pivot_wider(names_from = party_full, values_from = score)
View(wide_sentiment_full)
days_115 <- data.frame(date = seq(as.Date("2017-01-01"),as.Date("2018-12-31"),1))
daily_sentiment_115 <- days_115 %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party_full", values_to="score") %>%
group_by(party_full) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment %>% head()
ggplot(daily_sentiment_115, aes(x=date, y = score, colour=party_full)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
days_116 <- data.frame(date = seq(as.Date("2019-01-01"),as.Date("2020-12-31"),1))
daily_sentiment_116 <- days_116 %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party", values_to="score") %>%
group_by(party_full) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment_116 <- days_116 %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party_full", values_to="score") %>%
group_by(party_full) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
daily_sentiment_116 %>% head()
ggplot(daily_sentiment_116, aes(x=date, y = score, colour=party_full)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
days_117 <- data.frame(date = seq(as.Date("2021-01-01"),as.Date("2022-12-31"),1))
daily_sentiment_117 <- days_117 %>%
left_join(wide_sentiment_full) %>%
pivot_longer(cols = -date, names_to="party_full", values_to="score") %>%
group_by(party_full) %>%
arrange(date) %>%
mutate(score7 = data.table::frollmean(score, 7))
ggplot(daily_sentiment_117, aes(x=date, y = score, colour=party_full)) +
geom_point(aes(y=score), size=1) +
geom_line(aes(y=score7)) +
theme_minimal() +
geom_smooth(method = "lm")
View(summary_sentiment)
ggplot(summary_sentiment, aes(x = compound)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
geom_density(alpha=.1, fill="blue") +
labs(title="Density of bill cosposor party",
x ="Cosponsor party composition", y = "Density",
caption = "Numbers represent proportion of cosponsors from Democratic party,
so 0.0 represents bills that were fully Republican and 1.0 represents
bills that were fully Democrat.") +
theme_minimal()
ggplot(summary_sentiment, aes(x = compound)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
geom_density(alpha=.1, fill="blue") +
labs(title="Density of compount sentiment scores",
x ="Sentiment scores", y = "Density") +
theme_minimal()
ggplot(summary_sentiment, aes(x = compound)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
geom_density(alpha=.1, fill="blue") +
labs(title="Density of compound sentiment scores",
x ="Sentiment scores", y = "Density") +
theme_minimal()
